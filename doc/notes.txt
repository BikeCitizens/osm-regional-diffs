Regional Diffs
==============

Minutely Diffs -> Crop (auf eine bestimmte Region) -> alle ways extrahieren -> testen ob way teil einer bicylce relation ist.

Minutely Diffs
--------------
download von http://planet.openstreetmap.org/replication/minute/000/881/

Unter http://planet.openstreetmap.org/replication/minute/state.txt
gibt es eine sech:`sequenceNumber` die anzeigt welches File das letzte
minutely diff ist.

Man muss sich merken, welche sequenceNumber man als letztes
heruntergeladen hat und - für den Fall, dass man innerhalb des
vorgegenben Intervalls eine sequnceNumber verpasst hat - alle
dazwischen liegende Diffs ebenfalls laden.

Wenn das Skript als deamon läuft, dann kann man ein Intervall zw. 30s
und 59s wählen um sicher zu gehen, dass man keine Diff verpasst.

Einzelne Changesets
-------------------
download via http://www.openstreetmap.org/api/0.6/changeset/22466785/download

Crop (auf eine bestimmte Region)
--------------------------------
mit osmosis (aptitude install osmosis)
Usage auf http://wiki.openstreetmap.org/wiki/Osmosis/Detailed_Usage
vorarlberg-polygon als .poly-file mittels JOSM aus der Grenz-Relation abspeichern

Cleaned hourly changeset (solved merge conflicts)
-------------------------------------------------

osmosis --read-xml-change 291.osc outPipe.0="change" --simplify-change inPipe.0="change" --write-xml-change 291-clean.osc

Umwandeln eines Changesets in ein OSM-File
------------------------------------------

osmosis --read-empty outPipe.0="mypipe" --read-xml-change 291-clean.osc outPipe.0="change" --apply-change inPipe.0="mypipe" inPipe.1="change" --write-xml 291.osm

Crop des OSM-Files auf ein bounding polygon (vorarlberg.poly)
-------------------------------------------------------------

osmosis --read-xml file="291.osm" outPipe.0="change" --bounding-polygon inPipe.0="change" file="vorarlberg.poly" --write-xml 291-cropped.osm

Putting it all together (clean (from merge conflicts) -> convert osc to osm -> crop osm to vorarlberg
-----------------------------------------------------------------------------------------------------

osmosis --read-xml-change 291.osc outPipe.0="change" --simplify-change inPipe.0="change" outPipe.0="cleaned" --read-empty outPipe.0="empty" --apply-change inPipe.0="empty" inPipe.1="cleaned" outPipe.0="osm" --bounding-polygon inPipe.0="osm" file="vorarlberg.poly" --write-xml -

Way extrahieren
---------------

aus dem (cropted) minutely diff nach "way id" greppen
via der way-id den way aus http://www.openstreetmap.org/api/0.6/way/30160091 als XML runterladen

Download Map von Vorarlberg
---------------------------

http://overpass-api.de/api/map?bbox=9.5375,46.8417,10.2421,47.5968

http://overpass.osm.rambler.ru/cgi/interpreter?data=rel(46.8417,9.5375,47.5968,10.2421);out;

Relationen finden in der die "way id" enthalten sind
----------------------------------------------------

Mögliche Lösungen:

* aus der gegeben Region alle Relationen auflisten und schauen ob die "way id" in einer Relation enthalten ist
    die Relationen regelmäßig mittels overpass herunterladen
* "way id" über die overpass API abfragen und schauen ob die Relation geliefert wird.
    http://wiki.openstreetmap.org/wiki/Overpass_API/Language_Guide#Relations_2

Retrieve relation ids of way with overpass API
----------------------------------------------

* http://overpass-api.de/api/convert?data=way%2830245439%29%3B%0A%3C%3B%0Aout%20ids%3B&target=mapql
* http://overpass-turbo.eu/s/3TM

::
  way(30245439);
  <;
  out ids;

For multiple way ids do the following::

  way(31347480);
  <;
  out ids;
  way(30245439);
  <;
  out ids;

* http://overpass-turbo.eu/s/3TP

Find relation ids which are bicylce routes
------------------------------------------

::
  relation[route=bicycle];
  out ids;

To test a list of relations ids::

  relation(421088)[route=bicycle];
  out ids;
  relation(937246)[route=bicycle];
  out ids;
  relation(1745069)[route=bicycle];
  out ids;
  relation(1753434)[route=bicycle];
  out ids;
  relation(1753469)[route=bicycle];
  out ids;
  relation(1820015)[route=bicycle];
  out ids;
  relation(1820016)[route=bicycle];
  out ids;
  relation(1758896)[route=bicycle];
  out ids;
  relation(3812436)[route=bicycle];
  out ids;
  relation(3814846)[route=bicycle];
  out ids;

